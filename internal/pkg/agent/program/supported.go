// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by elastic-agent/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// internal/spec/apm-server.yml
	// internal/spec/auditbeat.yml
	// internal/spec/cloudbeat.yml
	// internal/spec/endpoint.yml
	// internal/spec/filebeat.yml
	// internal/spec/fleet-server.yml
	// internal/spec/heartbeat.yml
	// internal/spec/metricbeat.yml
	// internal/spec/osquerybeat.yml
	// internal/spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f + ": " + err.Error())
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
